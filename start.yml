---
- name: Create a new Demo EC2 instance
  hosts: local
  connection: local
  gather_facts: False

  tasks:
  - name: Create a security group
    local_action:
        module: ec2_group
        name: "{{ security_group }}"
        description: Security Group for webserver Servers
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
    register: basic_firewall

  - name: Launch the new EC2 Instance
    ec2:
      group: "{{ security_group }}"
      instance_type: "{{ instance_type}}"
      image: "{{ image }}"
      wait: true
      region: "{{ region }}"
      keypair: "{{ keypair }}"
      vpc_subnet_id: "{{ subnet }}"
      count: "{{count}}"
      instance_tags:
             Name: Test
    register: ec2

  - name: Add the newly created EC2 instance(s) to host group
    lineinfile:
       dest: "{{ hostpath }}"
       regexp: "{{ item.public_ip }}"
       insertafter: "[webservers]"
       line: "{{ item.public_ip }}"
       state: present
    loop: "{{ ec2.instances }}"


  - name: Wait for SSH to come up
    local_action: wait_for
       host="{{ item.public_ip }}"
       port=22
       delay=120
       timeout=180
       state=started
    loop: "{{ ec2.instances }}"
  
  # - name: add server ip addresses to hosts group
    # add_host: 
      # hostname: "{{ item.public_ip }}"
      # groups: web_AWS
    # loop: "{{ ec2.instances }}"


  - name: Add tag to Instance(s)
    local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
    loop: "{{ ec2.instances }}"
    args:
     tags:
      Type: webserver



